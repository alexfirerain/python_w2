# блок кода
# соответствует принципам товарища Сухого
# не обязано, но должно не затенять ключевые слова и встроенные функции
# в Питоне для функций строго змеиный регистр

# def <имя_функции>([параметры]):
#    <команды_в_соответствующем_отступе>

#   при определении функции параметры
#   при вызове функции это аргументы
#   можно 256 параметров, однако позиционных и именованных сколько угодно (?)

"""
Область видимости (scope) г/о глобальная и локальная
при непосредственном вызове локальные предпочитаются
В функцию в Питоне всегда передаётся не сама переменная, а копия значения.

Функция имеет доступ читать глобальную переменной, но не изменять её.
Однако может и изменить, если провозгласить внутри неё `global`.

Можно определить все переменные в программе в одном файле (модуле),
они будут доступны всей программе.

А объявленная в цикле переменная в Пифоне фигачит и после объявления!

"""
name = 'Пётыр'
count = 0


def greet():
    print(f'коннитива!')


greet()


def greet(name):
    print(f'коннитива {name}-сан!')


def greet_defaulting(name='noname'):
    print('Hello, ', name)


greet('Арика')

greet('Тачи')


def increment():
    # count += 1  # no way
    print(count)


def increment_g():
    global count  # а так можно! "двукнопочный запуск"
    count += 1
    print(count)
    greet(name)


increment_g()


def print_list(array=None):
    if array is None:
        array = []
    for item in array:
        print(item)


greet_defaulting()
greet_defaulting('Андуру')
